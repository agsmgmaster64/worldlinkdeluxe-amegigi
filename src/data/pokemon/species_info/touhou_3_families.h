#ifdef __INTELLISENSE__
const struct SpeciesInfo gSpeciesInfoTouhou3[] =
{
#endif

    [SPECIES_CHIBI_ELLEN] =
    {
        .baseHP        = 95,
        .baseAttack    = 35,
        .baseDefense   = 60,
        .baseSpeed     = 45,
        .baseSpAttack  = 75,
        .baseSpDefense = 30,
        .types = MON_TYPES(TYPE_HEART, TYPE_DREAM),
        .catchRate = 200,
        .expYield = 68,
        .evYield_HP = 1,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_OWN_TEMPO, ABILITY_SPRING_CHARM, ABILITY_UNAWARE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("CEllen"),
        .cryId = CRY_ELLEN,
        .natDexNum = NATIONAL_DEX_METAGROSS,
        .categoryName = _("Iron Leg"),
        .height = 16,
        .weight = 100,
        .description = COMPOUND_STRING(
            "Metagross has four brains that are joined\n"
            "by a complex neural network. As a result of\n"
            "integration, this Pokémon is smarter than\n"
            "a supercomputer."),
        .pokemonScale = 256,
        .pokemonOffset = 4,
        .trainerScale = 447,
        .trainerOffset = 9,
        .frontPic = gMonFrontPic_CEllen,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 3,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_CEllen,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_CEllen,
        .shinyPalette = gMonShinyPalette_CEllen,
        .iconSprite = gMonIcon_CEllen,
        .iconPalIndex = 1,
        FOOTPRINT(CEllen)
        .levelUpLearnset = sCEllenLevelUpLearnset,
        .teachableLearnset = sCEllenTeachableLearnset,
        .eggMoveLearnset = sCEllenEggMoveLearnset,
        .evolutions = EVOLUTION({EVO_LEVEL, 28, SPECIES_NORMAL_ELLEN}),
    },

    [SPECIES_NORMAL_ELLEN] =
    {
        .baseHP        = 120,
        .baseAttack    = 60,
        .baseDefense   = 85,
        .baseSpeed     = 70,
        .baseSpAttack  = 100,
        .baseSpDefense = 55,
        .types = MON_TYPES(TYPE_HEART, TYPE_DREAM),
        .catchRate = 45,
        .expYield = 196,
        .evYield_HP = 2,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_OWN_TEMPO, ABILITY_SPRING_CHARM, ABILITY_UNAWARE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Ellen"),
        .cryId = CRY_ELLEN,
        .natDexNum = NATIONAL_DEX_REGIROCK,
        .categoryName = _("Rock Peak"),
        .height = 17,
        .weight = 500,
        .description = COMPOUND_STRING(
            "A Pokémon that is made entirely of rocks\n"
            "and boulders. If parts of its body chip off\n"
            "in battle, Regirock repairs itself by\n"
            "adding new rocks."),
        .pokemonScale = 256,
        .pokemonOffset = 2,
        .trainerScale = 309,
        .trainerOffset = 1,
        .frontPic = gMonFrontPic_Ellen,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Ellen,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Ellen,
        .shinyPalette = gMonShinyPalette_Ellen,
        .iconSprite = gMonIcon_Ellen,
        .iconPalIndex = 1,
        FOOTPRINT(Ellen)
        .levelUpLearnset = sEllenLevelUpLearnset,
        .teachableLearnset = sEllenTeachableLearnset,
    },

    [SPECIES_PLACEHOLD_ELLEN] =
    {
        .baseHP        = 120,
        .baseAttack    = 60,
        .baseDefense   = 85,
        .baseSpeed     = 70,
        .baseSpAttack  = 100,
        .baseSpDefense = 55,
        .types = MON_TYPES(TYPE_HEART, TYPE_DREAM),
        .catchRate = 45,
        .expYield = 196,
        .evYield_HP = 2,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_OWN_TEMPO, ABILITY_SPRING_CHARM, ABILITY_UNAWARE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("PEllen"),
        .cryId = CRY_ELLEN,
        .natDexNum = NATIONAL_DEX_REGICE,
        .categoryName = _("Iceberg"),
        .height = 18,
        .weight = 500,
        .description = COMPOUND_STRING(
            "Its entire body is made of Antarctic ice.\n"
            "After extensive studies, researchers\n"
            "believe the ice was formed during an\n"
            "ice age."),
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 301,
        .trainerOffset = 2,
        .frontPic = gMonFrontPic_Ellen,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Ellen,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Ellen,
        .shinyPalette = gMonShinyPalette_Ellen,
        .iconSprite = gMonIcon_Ellen,
        .iconPalIndex = 1,
        FOOTPRINT(Ellen)
        .levelUpLearnset = sEllenLevelUpLearnset,
        .teachableLearnset = sEllenTeachableLearnset,
    },

    [SPECIES_CHIBI_KOTOHIME] =
    {
        .baseHP        = 75,
        .baseAttack    = 25,
        .baseDefense   = 35,
        .baseSpeed     = 95,
        .baseSpAttack  = 55,
        .baseSpDefense = 55,
        .types = MON_TYPES(TYPE_DREAM, TYPE_HEART),
        .catchRate = 190,
        .expYield = 68,
        .evYield_HP = 1,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_OWN_TEMPO, ABILITY_COLLECTOR },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("CKotohime"),
        .cryId = CRY_KOTOHIME,
        .natDexNum = NATIONAL_DEX_REGISTEEL,
        .categoryName = _("Iron"),
        .height = 19,
        .weight = 2050,
        .description = COMPOUND_STRING(
            "Its body is harder than any other kind of\n"
            "metal. The body metal is composed of a\n"
            "mysterious substance. Not only is it hard,\n"
            "it shrinks and stretches flexibly."),
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 359,
        .trainerOffset = 6,
        .frontPic = gMonFrontPic_CKotohime,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 2,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_CKotohime,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_CKotohime,
        .shinyPalette = gMonShinyPalette_CKotohime,
        .iconSprite = gMonIcon_CKotohime,
        .iconPalIndex = 1,
        FOOTPRINT(CKotohime)
        .levelUpLearnset = sCKotohimeLevelUpLearnset,
        .teachableLearnset = sCKotohimeTeachableLearnset,
        .eggMoveLearnset = sCKotohimeEggMoveLearnset,
        .evolutions = EVOLUTION({EVO_LEVEL, 30, SPECIES_NORMAL_KOTOHIME}),
    },

    [SPECIES_NORMAL_KOTOHIME] =
    {
        .baseHP        = 100,
        .baseAttack    = 50,
        .baseDefense   = 60,
        .baseSpeed     = 120,
        .baseSpAttack  = 70,
        .baseSpDefense = 80,
        .types = MON_TYPES(TYPE_DREAM, TYPE_HEART),
        .catchRate = 45,
        .expYield = 192,
        .evYield_HP = 3,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_OWN_TEMPO, ABILITY_COLLECTOR },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Kotohime"),
        .cryId = CRY_KOTOHIME,
        .natDexNum = NATIONAL_DEX_LATIAS,
        .categoryName = _("Eon"),
        .height = 14,
        .weight = 400,
        .description = COMPOUND_STRING(
            "They make a small herd of only several\n"
            "members. They rarely make contact with\n"
            "people or other Pokémon. They disappear\n"
            "if they sense enemies."),
        .pokemonScale = 304,
        .pokemonOffset = 3,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_Kotohime,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Kotohime,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Kotohime,
        .shinyPalette = gMonShinyPalette_Kotohime,
        .iconSprite = gMonIcon_Kotohime,
        .iconPalIndex = 1,
        FOOTPRINT(Kotohime)
        .levelUpLearnset = sKotohimeLevelUpLearnset,
        .teachableLearnset = sKotohimeTeachableLearnset,
    },

    [SPECIES_PLACEHOLD_KOTOHIME] =
    {
        .baseHP        = 100,
        .baseAttack    = 50,
        .baseDefense   = 60,
        .baseSpeed     = 120,
        .baseSpAttack  = 70,
        .baseSpDefense = 80,
        .types = MON_TYPES(TYPE_DREAM, TYPE_HEART),
        .catchRate = 45,
        .expYield = 192,
        .evYield_HP = 3,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_OWN_TEMPO, ABILITY_COLLECTOR },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("PKotohime"),
        .cryId = CRY_KOTOHIME,
        .natDexNum = NATIONAL_DEX_LATIOS,
        .categoryName = _("Eon"),
        .height = 20,
        .weight = 600,
        .description = COMPOUND_STRING(
            "Even in hiding, it can detect the locations\n"
            "of others and sense their emotions since\n"
            "it has telepathy. Its intelligence allows\n"
            "it to understand human languages."),
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 294,
        .trainerOffset = 3,
        .frontPic = gMonFrontPic_Kotohime,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Kotohime,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Kotohime,
        .shinyPalette = gMonShinyPalette_Kotohime,
        .iconSprite = gMonIcon_Kotohime,
        .iconPalIndex = 1,
        FOOTPRINT(Kotohime)
        .levelUpLearnset = sKotohimeLevelUpLearnset,
        .teachableLearnset = sKotohimeTeachableLearnset,
    },

    [SPECIES_CHIBI_KANA] =
    {
        .baseHP        = 65,
        .baseAttack    = 55,
        .baseDefense   = 65,
        .baseSpeed     = 45,
        .baseSpAttack  = 55,
        .baseSpDefense = 65,
        .types = MON_TYPES(TYPE_GHOST, TYPE_DREAM),
        .catchRate = 190,
        .expYield = 70,
        .evYield_HP = 1,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SOUNDPROOF, ABILITY_LEVITATE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("CKana"),
        .cryId = CRY_KANA,
        .natDexNum = NATIONAL_DEX_KYOGRE,
        .categoryName = _("Sea Basin"),
        .height = 45,
        .weight = 3520,
        .description = COMPOUND_STRING(
            "Kyogre has appeared in mythology as the\n"
            "creator of the sea. After long years of\n"
            "feuding with Groudon, it took to sleep at\n"
            "the bottom of the sea."),
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 614,
        .trainerOffset = 13,
        .frontPic = gMonFrontPic_CKana,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 6,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .enemyMonElevation = 8,
        .backPic = gMonBackPic_CKana,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_CKana,
        .shinyPalette = gMonShinyPalette_CKana,
        .iconSprite = gMonIcon_CKana,
        .iconPalIndex = 1,
        FOOTPRINT(CKana)
        .levelUpLearnset = sCKanaLevelUpLearnset,
        .teachableLearnset = sCKanaTeachableLearnset,
        .eggMoveLearnset = sCKanaEggMoveLearnset,
        .evolutions = EVOLUTION({EVO_LEVEL, 30, SPECIES_NORMAL_KANA}),
    },

    [SPECIES_NORMAL_KANA] =
    {
        .baseHP        = 90,
        .baseAttack    = 80,
        .baseDefense   = 90,
        .baseSpeed     = 70,
        .baseSpAttack  = 80,
        .baseSpDefense = 90,
        .types = MON_TYPES(TYPE_GHOST),
        .catchRate = 45,
        .expYield = 200,
        .evYield_HP = 1,
        .evYield_Defense = 1,
        .evYield_SpDefense = 1,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SOUNDPROOF, ABILITY_LEVITATE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Kana"),
        .cryId = CRY_KANA,
        .natDexNum = NATIONAL_DEX_GROUDON,
        .categoryName = _("Continent"),
        .height = 35,
        .weight = 9500,
        .description = COMPOUND_STRING(
            "Groudon has appeared in mythology as the\n"
            "creator of the land. It sleeps in magma\n"
            "underground and is said to make volcanoes\n"
            "erupt on awakening."),
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 515,
        .trainerOffset = 14,
        .frontPic = gMonFrontPic_Kana,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Kana,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Kana,
        .shinyPalette = gMonShinyPalette_Kana,
        .iconSprite = gMonIcon_Kana,
        .iconPalIndex = 1,
        FOOTPRINT(Kana)
        .levelUpLearnset = sKanaLevelUpLearnset,
        .teachableLearnset = sKanaTeachableLearnset,
    },

    [SPECIES_PLACEHOLD_KANA] =
    {
        .baseHP        = 90,
        .baseAttack    = 80,
        .baseDefense   = 90,
        .baseSpeed     = 70,
        .baseSpAttack  = 80,
        .baseSpDefense = 90,
        .types = MON_TYPES(TYPE_GHOST),
        .catchRate = 45,
        .expYield = 200,
        .evYield_HP = 1,
        .evYield_Defense = 1,
        .evYield_SpDefense = 1,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SOUNDPROOF, ABILITY_LEVITATE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("PKana"),
        .cryId = CRY_KANA,
        .natDexNum = NATIONAL_DEX_RAYQUAZA,
        .categoryName = _("Sky High"),
        .height = 70,
        .weight = 2065,
        .description = COMPOUND_STRING(
            "A Pokémon that flies endlessly in the\n"
            "ozone layer. It is said it would descend\n"
            "to the ground if Kyogre and Groudon\n"
            "were to fight."),
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 448,
        .trainerOffset = 12,
        .frontPic = gMonFrontPic_Kana,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Kana,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Kana,
        .shinyPalette = gMonShinyPalette_Kana,
        .iconSprite = gMonIcon_Kana,
        .iconPalIndex = 1,
        FOOTPRINT(Kana)
        .levelUpLearnset = sKanaLevelUpLearnset,
        .teachableLearnset = sKanaTeachableLearnset,
    },

    [SPECIES_CHIBI_RIKAKO] =
    {
        .baseHP        = 15,
        .baseAttack    = 10,
        .baseDefense   = 50,
        .baseSpeed     = 105,
        .baseSpAttack  = 120,
        .baseSpDefense = 50,
        .types = MON_TYPES(TYPE_REASON),
        .catchRate = 70,
        .expYield = 70,
        .evYield_SpAttack = 1,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_INSOMNIA, ABILITY_NONE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("CRikako"),
        .cryId = CRY_RIKAKO,
        .natDexNum = NATIONAL_DEX_JIRACHI,
        .categoryName = _("Wish"),
        .height = 3,
        .weight = 11,
        .description = COMPOUND_STRING(
            "Jirachi is said to make wishes come true.\n"
            "While it sleeps, a tough crystalline shell\n"
            "envelops the body to protect it from\n"
            "enemies."),
        .pokemonScale = 608,
        .pokemonOffset = -8,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_CRikako,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_CRikako,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_CRikako,
        .shinyPalette = gMonShinyPalette_CRikako,
        .iconSprite = gMonIcon_CRikako,
        .iconPalIndex = 1,
        FOOTPRINT(CRikako)
        .levelUpLearnset = sCRikakoLevelUpLearnset,
        .teachableLearnset = sCRikakoTeachableLearnset,
        .eggMoveLearnset = sCRikakoEggMoveLearnset,
        .evolutions = EVOLUTION({EVO_LEVEL, 30, SPECIES_NORMAL_RIKAKO}),
    },

    [SPECIES_NORMAL_RIKAKO] =
    {
        .baseHP        = 40,
        .baseAttack    = 35,
        .baseDefense   = 75,
        .baseSpeed     = 130,
        .baseSpAttack  = 145,
        .baseSpDefense = 75,
        .types = MON_TYPES(TYPE_REASON, TYPE_FLYING),
        .catchRate = 45,
        .expYield = 200,
        .evYield_SpAttack = 3,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_INSOMNIA, ABILITY_NONE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Rikako"),
        .cryId = CRY_RIKAKO,
        .natDexNum = NATIONAL_DEX_DEOXYS,
        .categoryName = _("DNA"),
        .height = 17,
        .weight = 608,
        .description = gDeoxysNormalPokedexText,
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 290,
        .trainerOffset = 2,
        .frontPic = gMonFrontPic_Rikako,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 0,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .enemyMonElevation = 8,
        .backPic = gMonBackPic_Rikako,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Rikako,
        .shinyPalette = gMonShinyPalette_Rikako,
        .iconSprite = gMonIcon_Rikako,
        .iconPalIndex = 1,
        FOOTPRINT(Rikako)
        .levelUpLearnset = sRikakoLevelUpLearnset,
        .teachableLearnset = sRikakoTeachableLearnset,
    },

    [SPECIES_PLACEHOLD_RIKAKO] =
    {
        .baseHP        = 40,
        .baseAttack    = 35,
        .baseDefense   = 75,
        .baseSpeed     = 130,
        .baseSpAttack  = 145,
        .baseSpDefense = 75,
        .types = MON_TYPES(TYPE_REASON, TYPE_FLYING),
        .catchRate = 45,
        .expYield = 200,
        .evYield_SpAttack = 3,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_INSOMNIA, ABILITY_NONE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("PRikako"),
        .cryId = CRY_RIKAKO,
        .natDexNum = NATIONAL_DEX_TURTWIG,
        .categoryName = _("Tiny Leaf"),
        .height = 4,
        .weight = 102,
        .description = COMPOUND_STRING(
            "The shell on its back is made of soil. \n"
            "On a very healthy Turtwig, the shell \n"
            "should feel moist. The leaf on its head\n"
            "wilts if it is thirsty."),
        .pokemonScale = 491,
        .pokemonOffset = 20,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_Rikako,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 0,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .enemyMonElevation = 8,
        .backPic = gMonBackPic_Rikako,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Rikako,
        .shinyPalette = gMonShinyPalette_Rikako,
        .iconSprite = gMonIcon_Rikako,
        .iconPalIndex = 1,
        FOOTPRINT(Rikako)
        .levelUpLearnset = sRikakoLevelUpLearnset,
        .teachableLearnset = sRikakoTeachableLearnset,
    },

    [SPECIES_CHIBI_CHIYURI] =
    {
        .baseHP        = 65,
        .baseAttack    = 65,
        .baseDefense   = 45,
        .baseSpeed     = 55,
        .baseSpAttack  = 65,
        .baseSpDefense = 75,
        .types = MON_TYPES(TYPE_REASON, TYPE_WATER),
        .catchRate = 190,
        .expYield = 74,
        .evYield_SpDefense = 1,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SWIFT_SWIM, ABILITY_INTIMIDATE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("CChiyuri"),
        .cryId = CRY_CHIYURI,
        .natDexNum = NATIONAL_DEX_GROTLE,
        .categoryName = _("Grove"),
        .height = 11,
        .weight = 970,
        .description = COMPOUND_STRING(
            "A Grotle that lives in the forest is said\n"
            "to have its own secret springwater well. \n"
            "It carries fellow Pokémon there on \n"
            "its back."),
        .pokemonScale = 320,
        .pokemonOffset = 9,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_CChiyuri,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 3,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_CChiyuri,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_CChiyuri,
        .shinyPalette = gMonShinyPalette_CChiyuri,
        .iconSprite = gMonIcon_CChiyuri,
        .iconPalIndex = 1,
        FOOTPRINT(CChiyuri)
        .levelUpLearnset = sCChiyuriLevelUpLearnset,
        .teachableLearnset = sCChiyuriTeachableLearnset,
        .eggMoveLearnset = sCChiyuriEggMoveLearnset,
        .evolutions = EVOLUTION({EVO_LEVEL, 34, SPECIES_NORMAL_CHIYURI}),
    },

    [SPECIES_NORMAL_CHIYURI] =
    {
        .baseHP        = 90,
        .baseAttack    = 90,
        .baseDefense   = 70,
        .baseSpeed     = 80,
        .baseSpAttack  = 90,
        .baseSpDefense = 100,
        .types = MON_TYPES(TYPE_REASON, TYPE_WATER),
        .catchRate = 45,
        .expYield = 208,
        .evYield_SpDefense = 3,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SWIFT_SWIM, ABILITY_INTIMIDATE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Chiyuri"),
        .cryId = CRY_CHIYURI,
        .natDexNum = NATIONAL_DEX_TORTERRA,
        .categoryName = _("Continent"),
        .height = 22,
        .weight = 3100,
        .description = COMPOUND_STRING(
            "Some Pokémon are born on a Torterra's\n"
            "back and spend their entire life there.\n"
            "Ancient people imagined that beneath \n"
            "the ground, a gigantic Torterra dwelled."),
        .pokemonScale = 256,
        .pokemonOffset = 0,
        .trainerScale = 348,
        .trainerOffset = 6,
        .frontPic = gMonFrontPic_Chiyuri,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 0,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Chiyuri,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Chiyuri,
        .shinyPalette = gMonShinyPalette_Chiyuri,
        .iconSprite = gMonIcon_Chiyuri,
        .iconPalIndex = 1,
        FOOTPRINT(Chiyuri)
        .levelUpLearnset = sChiyuriLevelUpLearnset,
        .teachableLearnset = sChiyuriTeachableLearnset,
    },

    [SPECIES_PLACEHOLD_CHIYURI] =
    {
        .baseHP        = 90,
        .baseAttack    = 90,
        .baseDefense   = 70,
        .baseSpeed     = 80,
        .baseSpAttack  = 90,
        .baseSpDefense = 100,
        .types = MON_TYPES(TYPE_REASON, TYPE_WATER),
        .catchRate = 45,
        .expYield = 208,
        .evYield_SpDefense = 3,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_MEDIUM_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SWIFT_SWIM, ABILITY_INTIMIDATE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("PChiyuri"),
        .cryId = CRY_CHIYURI,
        .natDexNum = NATIONAL_DEX_CHIMCHAR,
        .categoryName = _("Chimp"),
        .height = 5,
        .weight = 62,
        .description = COMPOUND_STRING(
            "Its fiery rear end is fueled by gas made\n"
            "in its belly. Before going to sleep,\n"
            "Chimchar extinguish the flame on their\n"
            "tails to prevent fires."),
        .pokemonScale = 432,
        .pokemonOffset = 15,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_Chiyuri,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 0,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Chiyuri,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Chiyuri,
        .shinyPalette = gMonShinyPalette_Chiyuri,
        .iconSprite = gMonIcon_Chiyuri,
        .iconPalIndex = 1,
        FOOTPRINT(Chiyuri)
        .levelUpLearnset = sChiyuriLevelUpLearnset,
        .teachableLearnset = sChiyuriTeachableLearnset,
    },

    [SPECIES_CHIBI_YUMEMI] =
    {
        .baseHP        = 60,
        .baseAttack    = 55,
        .baseDefense   = 45,
        .baseSpeed     = 95,
        .baseSpAttack  = 100,
        .baseSpDefense = 55,
        .types = MON_TYPES(TYPE_REASON, TYPE_ICE),
        .catchRate = 75,
        .expYield = 82,
        .evYield_SpAttack = 2,
        .itemRare = ITEM_GOTHIC_DRESS,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_SLOW,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SOUNDPROOF, ABILITY_COLD_HEART },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("CYumemi"),
        .cryId = CRY_YUMEMI,
        .natDexNum = NATIONAL_DEX_MONFERNO,
        .categoryName = _("Playful"),
        .height = 9,
        .weight = 220,
        .description = COMPOUND_STRING(
            "It carefully controls the intensity of\n"
            "the flame on its tail, so as to keep its\n"
            "foes at an adequate distance.\n"
            "Its fiery tail is but one weapon."),
        .pokemonScale = 338,
        .pokemonOffset = 9,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_CYumemi,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 1,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_CYumemi,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_CYumemi,
        .shinyPalette = gMonShinyPalette_CYumemi,
        .iconSprite = gMonIcon_CYumemi,
        .iconPalIndex = 1,
        FOOTPRINT(CYumemi)
        .levelUpLearnset = sCYumemiLevelUpLearnset,
        .teachableLearnset = sCYumemiTeachableLearnset,
        .eggMoveLearnset = sCYumemiEggMoveLearnset,
        .evolutions = EVOLUTION({EVO_LEVEL, 40, SPECIES_NORMAL_YUMEMI}),
    },

    [SPECIES_NORMAL_YUMEMI] =
    {
        .baseHP        = 85,
        .baseAttack    = 80,
        .baseDefense   = 70,
        .baseSpeed     = 120,
        .baseSpAttack  = 125,
        .baseSpDefense = 80,
        .types = MON_TYPES(TYPE_REASON, TYPE_ICE),
        .catchRate = 45,
        .expYield = 224,
        .evYield_SpAttack = 3,
        .itemRare = ITEM_GOTHIC_DRESS,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_SLOW,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SOUNDPROOF, ABILITY_COLD_HEART },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Yumemi"),
        .cryId = CRY_YUMEMI,
        .natDexNum = NATIONAL_DEX_INFERNAPE,
        .categoryName = _("Flame"),
        .height = 12,
        .weight = 550,
        .description = COMPOUND_STRING(
            "Its crown of fire is indicative of its\n"
            "fiery nature. It uses a special kind of\n"
            "martial arts involving all of its limbs to\n"
            "take on any opponent."),
        .pokemonScale = 282,
        .pokemonOffset = 3,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_Yumemi,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 0,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Yumemi,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Yumemi,
        .shinyPalette = gMonShinyPalette_Yumemi,
        .iconSprite = gMonIcon_Yumemi,
        .iconPalIndex = 1,
        FOOTPRINT(Yumemi)
        .levelUpLearnset = sYumemiLevelUpLearnset,
        .teachableLearnset = sYumemiTeachableLearnset,
    },

    [SPECIES_PLACEHOLD_YUMEMI] =
    {
        .baseHP        = 85,
        .baseAttack    = 80,
        .baseDefense   = 70,
        .baseSpeed     = 120,
        .baseSpAttack  = 125,
        .baseSpDefense = 80,
        .types = MON_TYPES(TYPE_REASON, TYPE_ICE),
        .catchRate = 45,
        .expYield = 224,
        .evYield_SpAttack = 3,
        .itemRare = ITEM_GOTHIC_DRESS,
        .genderRatio = PERCENT_FEMALE(50),
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_SLOW,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_HUMAN_LIKE),
        .abilities = { ABILITY_SOUNDPROOF, ABILITY_COLD_HEART },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("PYumemi"),
        .cryId = CRY_YUMEMI,
        .natDexNum = NATIONAL_DEX_PIPLUP,
        .categoryName = _("Penguin"),
        .height = 4,
        .weight = 52,
        .description = COMPOUND_STRING(
            "A poor walker, it often falls down. However,\n"
            "its strong pride makes it puff up its chest\n"
            "without a care. It's difficult to bond with\n"
            "since it won't listen to its Trainer."),
        .pokemonScale = 491,
        .pokemonOffset = 17,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_Yumemi,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 0,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Yumemi,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Yumemi,
        .shinyPalette = gMonShinyPalette_Yumemi,
        .iconSprite = gMonIcon_Yumemi,
        .iconPalIndex = 1,
        FOOTPRINT(Yumemi)
        .levelUpLearnset = sYumemiLevelUpLearnset,
        .teachableLearnset = sYumemiTeachableLearnset,
    },

    [SPECIES_KEDAMA] =
    {
        .baseHP        = 50,
        .baseAttack    = 60,
        .baseDefense   = 60,
        .baseSpeed     = 80,
        .baseSpAttack  = 30,
        .baseSpDefense = 50,
        .types = MON_TYPES(TYPE_NATURE),
        .catchRate = 255,
        .expYield = 99,
        .genderRatio = MON_GENDERLESS,
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_DITTO),
        .abilities = { ABILITY_LIMBER, ABILITY_NONE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Kedama"),
        .cryId = CRY_KEDAMA,
        .natDexNum = NATIONAL_DEX_PRINPLUP,
        .categoryName = _("Penguin"),
        .height = 8,
        .weight = 230,
        .description = COMPOUND_STRING(
            "Because every Prinplup considers itself\n"
            "to be the most important, they can never\n"
            "form a group. It searches for prey in\n"
            "icy seas."),
        .pokemonScale = 366,
        .pokemonOffset = 10,
        .trainerScale = 257,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_Kedama,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 0,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .enemyMonElevation = 4,
        .backPic = gMonBackPic_Kedama,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Kedama,
        .shinyPalette = gMonShinyPalette_Kedama,
        .iconSprite = gMonIcon_Kedama,
        .iconPalIndex = 0,
        FOOTPRINT(Kedama)
        .tmIlliterate = TRUE,
        .levelUpLearnset = sKedamaLevelUpLearnset,
        .teachableLearnset = sKedamaTeachableLearnset,
        .evolutions = EVOLUTION({EVO_ITEM, ITEM_SWIFT_HEART, SPECIES_MIMI_CHAN},
                                {EVO_ITEM, ITEM_HELPER_HEART, SPECIES_RUUKOTO}),
    },

    [SPECIES_RUUKOTO] =
    {
        .baseHP        = 75,
        .baseAttack    = 20,
        .baseDefense   = 50,
        .baseSpeed     = 65,
        .baseSpAttack  = 50,
        .baseSpDefense = 220,
        .types = MON_TYPES(TYPE_HEART, TYPE_STEEL),
        .catchRate = 45,
        .expYield = 192,
        .evYield_SpDefense = 2,
        .genderRatio = MON_GENDERLESS,
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_NO_EGGS_DISCOVERED),
        .abilities = { ABILITY_STURDY, ABILITY_NONE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Ruukoto"),
        .cryId = CRY_RUUKOTO,
        .natDexNum = NATIONAL_DEX_EMPOLEON,
        .categoryName = _("Emperor"),
        .height = 17,
        .weight = 845,
        .description = COMPOUND_STRING(
            "The three horns that extend from its beak\n"
            "attest to its power. It avoids unnecessary\n"
            "disputes, but it will decimate anything\n"
            "that threatens its pride."),
        .pokemonScale = 259,
        .pokemonOffset = 0,
        .trainerScale = 290,
        .trainerOffset = 1,
        .frontPic = gMonFrontPic_Ruukoto,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 2,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .backPic = gMonBackPic_Ruukoto,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Ruukoto,
        .shinyPalette = gMonShinyPalette_Ruukoto,
        .iconSprite = gMonIcon_Ruukoto,
        .iconPalIndex = 0,
        FOOTPRINT(Ruukoto)
        .levelUpLearnset = sRuukotoLevelUpLearnset,
        .teachableLearnset = sRuukotoTeachableLearnset,
    },

    [SPECIES_MIMI_CHAN] =
    {
        .baseHP        = 50,
        .baseAttack    = 130,
        .baseDefense   = 40,
        .baseSpeed     = 140,
        .baseSpAttack  = 80,
        .baseSpDefense = 40,
        .types = MON_TYPES(TYPE_FIRE, TYPE_STEEL),
        .catchRate = 45,
        .expYield = 192,
        .evYield_Attack = 2,
        .genderRatio = MON_GENDERLESS,
        .eggCycles = 20,
        .friendship = STANDARD_FRIENDSHIP,
        .growthRate = GROWTH_FAST,
        .eggGroups = MON_EGG_GROUPS(EGG_GROUP_NO_EGGS_DISCOVERED),
        .abilities = { ABILITY_ROCK_HEAD, ABILITY_NONE },
        .sourceGame = SOURCE_PODD,
        .noFlip = TRUE,
        .speciesName = _("Mimi-chan"),
        .cryId = CRY_MIMI_CHAN,
        .natDexNum = NATIONAL_DEX_STARLY,
        .categoryName = _("Starling"),
        .height = 3,
        .weight = 20,
        .description = COMPOUND_STRING(
            "They flock around mountains and fields,\n"
            "chasing after bug Pokémon. However,\n"
            "they bicker if the group grows too big.\n"
            "Their singing is noisy and annoying."),
        .pokemonScale = 530,
        .pokemonOffset = 13,
        .trainerScale = 256,
        .trainerOffset = 0,
        .frontPic = gMonFrontPic_Mimichan,
        .frontPicSize = MON_COORDS_SIZE(64, 64),
        .frontPicYOffset = 8,
        .frontAnimFrames = sAnims_GenericBlinkingAnim,
        .frontAnimId = ANIM_V_SQUISH_AND_BOUNCE,
        .enemyMonElevation = 8,
        .backPic = gMonBackPic_Mimichan,
        .backPicSize = MON_COORDS_SIZE(64, 64),
        .backPicYOffset = 0,
        .backAnimId = BACK_ANIM_NONE,
        .palette = gMonPalette_Mimichan,
        .shinyPalette = gMonShinyPalette_Mimichan,
        .iconSprite = gMonIcon_Mimichan,
        .iconPalIndex = 1,
        FOOTPRINT(Mimichan)
        .levelUpLearnset = sMimichanLevelUpLearnset,
        .teachableLearnset = sMimichanTeachableLearnset,
    },

#ifdef __INTELLISENSE__
};
#endif
